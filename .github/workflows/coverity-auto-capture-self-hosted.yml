name: Coverity with Self-Hosted Runner

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  workflow_dispatch:

jobs:
  build:
    runs-on: [self-hosted, coverity]

    env:
      COVERITY_URL: ${{ secrets.COVERITY_URL }}
      COV_USER: ${{ secrets.COVERITY_USER }}
      COVERITY_PASSPHRASE: ${{ secrets.COVERITY_PASSPHRASE }}
      COVERITY_LICENSE: ${{ secrets.COVERITY_LICENSE }}
      SECURITY_GATE_ARGS: --new
      COVERITY_CHECKERS: --webapp-security
      SYNOPSYS_GITHUB_TOOLS_REPO: https://github.com/synopsys-sig-community/synopsys-github-tools

    steps:
      - uses: actions/checkout@v2

      - name: Get Synopsys GitHub Tools
        run: |
          git clone -q --depth 1 $SYNOPSYS_GITHUB_TOOLS_REPO
          pip3 install --upgrade pandas requests==2.26.0 urllib3==1.26.7 jsonapi-requests==0.6.2 tenacity==6.2.0 pygithub

      - name: Coverity License
        run: |
          echo $COVERITY_LICENSE > coverity-license.dat

      - name: Create Coverity Stream
        if: ${{github.event_name == 'push'}}
        # TODO: Should this only run for master, other specific names?
        run: |
          env
          export COVERITY_STREAM_NAME=${GITHUB_REPO##*/}-${GITHUB_REF##*/}
          echo Ensure that stream "$COVERITY_STREAM_NAME" exists
          cov-manage-im --url $COVERITY_URL --on-new-cert trust --mode streams --add -set name:"$COVERITY_STREAM_NAME" || true

      - name: Coverity Scan (Full analysis)
        if: ${{github.event_name == 'push'}}
        run: |
          export COVERITY_STREAM_NAME=${GITHUB_REPO##*/}-${GITHUB_REF##*/}
          cov-capture --dir idir --project-dir .
          cov-analyze --dir idir --security-file coverity-license.dat $COVERITY_CHECKERS
          cov-commit-defects --dir idir --ticker-mode none --url $COVERITY_URL --on-new-cert trust --stream $COVERITY_STREAM_NAME --scm git --description "GitHub Workflow $GITHUB_WORKFLOW for $GITHUB_REPO" --version $GITHUB_SHA
          cov-format-errors --dir idir --json-output-v8 coverity-full-results.json

      - name: Export Coverity Results to SARIF (Full)
        run: python3 ./synopsys-github-tools/github-export-coverity-issues.py --coverity-json coverity-full-results.json --debug 9
        if: ${{github.event_name == 'push'}}
        
      #- name: Detect Changeset
      #  id: changeset
      #  uses: jitterbit/get-changed-files@v1
      #  if: ${{ github.event_name == 'pull_request' }}
        
      - name: Get Pull Request Changeset
        if: ${{ github.event_name == 'pull_request' }}
        id: changeset
        uses: jitterbit/get-changed-files@v1
        with:
          format: json
        
      - name: Coverity Scan (Incremental analysis)
        if: ${{github.event_name == 'pull_request'}}
        run: |
          export COVERITY_STREAM_NAME=${GITHUB_REPO##*/}-${GITHUB_REF##*/}
          echo ${{ steps.changeset.outputs.added_modified }}
          readarray -t changed_files <<<"$(jq -r '.[]' <<<'${{ steps.changeset.outputs.added_modified }}')"
          for changed_file in ${changed_files[@]}; do
            echo ${changed_file} >> coverity-files-to-scan.txt
            echo "Scan changed file ${changed_file}."
          done
          cov-capture --dir idir --source-list coverity-files-to-scan.txt
          cov-run-desktop --dir idir --url $COVERITY_URL --stream $COVERITY_STREAM_NAME --present-in-reference false \
            --ignore-uncapturable-inputs true --exit1-if-defects true coverity-files-to-scan.txt
            
      - name: Export Coverity Results to SARIF (Incremental)
        run: python3 ./synopsys-github-tools/github-export-coverity-issues.py --coverity-json coverity-full-results.json --comment-on-github-pr --debug 9
        if: ${{github.event_name == 'pull_request'}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v1
        with:
          # Path to SARIF file relative to the root of the repository
          sarif_file: synopsys-coverity-github-sarif.json
